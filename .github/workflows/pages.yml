# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: wasm-bindgen-action
        # You may pin to the exact commit or the version.
        # uses: jetli/wasm-bindgen-action@370ddd977537b33f15fd1241476a90a1254dfdae
        uses: jetli/wasm-bindgen-action@v0.1.0
        with:
          # Optional version of wasm-bindgen to install (eg. "0.2.68", "latest")
          version: 0.2.95
      - name: rust-toolchain
        # You may pin to the exact commit or the version.
        # uses: actions-rs/toolchain@b2417cde72dcf67f306c0ae8e0828a81bf0b189f
        uses: actions-rs/toolchain@v1.0.6
        with:
          # Rust toolchain name.
          toolchain: 1.81.0
          target: wasm32-unknown-unknown
          default: 'true'
      - uses: jetli/trunk-action@v0.5.0
        with:
          # Optional version of trunk to install(eg. 'v0.19.1', 'latest')
          version: 'latest'
      - name: Install and Build ðŸ”§
        working-directory: crates/website
        run: trunk build --release --public-url="/palettepal/
      - name: Populate docs
        run: mkdir -p pages && cp -r crates/website/dist/* pages
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: 'pages'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
